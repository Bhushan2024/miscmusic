@model Demo.Models.EventBookingViewModel

@{
    ViewData["Title"] = "Event Details & Bookings";
}

<div class="container mt-5">
    <!-- Event Details Section -->
    <div class="card shadow-lg border-0 mb-4" style="border-radius: 15px;">
        <div class="card-body">
            <h2 class="text-center" style="color: #ff6f61;">@Model.Event.EventName</h2>
            <div class="row mt-4">
                <div class="col-md-6">
                    <p><strong>Description:</strong> @Model.Event.EventDescription</p>
                    <p><strong>Location:</strong> @Model.Event.EventLocation</p>
                    <p><strong>Date:</strong> @Model.Event.EventDate.ToShortDateString()</p>
                    <p><strong>Time:</strong> @Model.Event.EventTime</p>
                </div>
                <div class="col-md-6">
                    <p><strong>Organizer:</strong> @Model.Event.EventOrganizer</p>
                    <p><strong>Contact:</strong> @Model.Event.EventOrganizerContact</p>
                    <p><strong>Seats Available:</strong> @(Model.Event.TotalSeats - Model.Event.BookedSeats)</p>
                    <p><strong>Ticket Price:</strong> @Model.Event.TicketPrice</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Bookings Table -->
    <div class="card shadow-lg border-0" style="border-radius: 15px;">
        <div class="card-body">
            <h4 class="text-center" style="color: #ff6f61;">Booking Details</h4>

            <!-- Filter and Search Section -->
            <div class="d-flex justify-content-between mb-3">
                <input type="text" id="searchBox" class="form-control w-25" placeholder="Search by User Name">
                <select id="statusFilter" class="form-select w-25">
                    <option value="All">All</option>
                    <option value="Confirmed">Confirmed</option>
                    <option value="Pending">Pending</option>
                </select>
                <input type="date" id="dateFilter" class="form-control w-25">
            </div>

            <table class="table mt-3 custom-table">
                <thead class="table-theme">
                    <tr>
                        <th>User</th>
                        <th>Seats Booked</th>
                        <th>Booking Status</th>
                        <th>Booking Date</th>
                        <th>Payment Status</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var booking in Model.Bookings)
                    {
                        <tr>
                            <td>@booking.User.Firstname @booking.User.Lastname</td>
                            <td>@booking.SeatsBooked</td>
                            <td>@booking.BookingStatus</td>
                            <td>@booking.BookingDate.ToString("yyyy-MM-dd")</td>
                            <td>
                                @if (booking.PaymentId.HasValue)
                                {
                                    <span class="badge badge-theme-success">Paid</span>
                                }
                                else
                                {
                                    <span class="badge badge-theme-warning">Pending</span>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            <nav>
                <ul class="pagination justify-content-center" id="pagination"></ul>
            </nav>
        </div>
    </div>
</div>

<style>
    .card-body p {
        font-size: 1rem;
        margin-bottom: 8px;
    }

    .custom-table {
        border-collapse: separate;
        border-spacing: 0 10px;
    }

        .custom-table th {
            background-color: #ff6f61;
            color: white;
            border: none;
        }

        .custom-table td {
            background: white;
            border: none;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .custom-table th, .custom-table td {
            text-align: center;
            padding: 10px;
        }

    .badge-theme-success {
        background-color: #28a745;
        color: white;
        padding: 5px 10px;
        border-radius: 20px;
    }

    .badge-theme-warning {
        background-color: #ffc107;
        color: white;
        padding: 5px 10px;
        border-radius: 20px;
    }

    .pagination .page-link {
        color: #ff6f61;
    }

    .pagination .page-item.active .page-link {
        background-color: #ff6f61;
        border-color: #ff6f61;
        color: white;
    }

    #searchBox, #statusFilter, #dateFilter {
        border-radius: 25px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }
</style>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function() {
        const rowsPerPage = 4;
        let currentPage = 1;

        function filterAndPaginate() {
            const searchText = $('#searchBox').val().toLowerCase();
            const statusFilter = $('#statusFilter').val();
            const dateFilter = $('#dateFilter').val();

            let filteredRows = $('tbody tr').filter(function() {
                const userName = $(this).find('td:nth-child(1)').text().toLowerCase();
                const bookingStatus = $(this).find('td:nth-child(3)').text().trim();
                const bookingDate = $(this).find('td:nth-child(4)').text().trim();

                const matchesSearch = userName.includes(searchText);
                const matchesStatus = statusFilter === 'All' || bookingStatus === statusFilter;
                const matchesDate = !dateFilter || bookingDate == dateFilter;

                return matchesSearch && matchesStatus && matchesDate;
            });

            const totalPages = Math.ceil(filteredRows.length / rowsPerPage);
            const start = (currentPage - 1) * rowsPerPage;
            const end = start + rowsPerPage;

            $('tbody tr').hide();
            filteredRows.slice(start, end).show();

            $('#pagination').empty();
            for (let i = 1; i <= totalPages; i++) {
                $('#pagination').append(`<li class="page-item ${i === currentPage ? 'active' : ''}"><a class="page-link" href="#">${i}</a></li>`);
            }
        }

        $('#searchBox, #statusFilter, #dateFilter').on('input change', function() {
            currentPage = 1;
            filterAndPaginate();
        });

        $('#pagination').on('click', 'a', function(e) {
            e.preventDefault();
            currentPage = parseInt($(this).text());
            filterAndPaginate();
        });

        filterAndPaginate();
    });
</script>
